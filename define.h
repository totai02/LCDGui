#ifndef DEFINE_H
#define DEFINE_H

#define BTN1 7
#define BTN2 0
#define BTN3 21
#define BTN4 22
#define BL 30

#define MESSAGE_DIALOG 0
#define POWER_DIALOG 1
#define YESNO_DIALOG 2
#define OPENFILE_DIALOG 3
#define ACCEPT_DIALOG 4

#define NO_IMAGE 0
#define ENTER 1
#define ENTER_HOVER 2
#define BACKSPACE 3
#define BACKSPACE_HOVER 4
#define DEL 5
#define DEL_HOVER 6
#define UPPER 7
#define UPPER_HOVER 8
#define SYMBOL 9
#define SYMBOL_HOVER 10
#define EXIT 11
#define EXIT_HOVER 12
#define FOLDER 13
#define FILE_IMG 14
#define WIFI1 15
#define WIFI2 16
#define WIFI3 17
#define CLOCK 18
#define ACCEPT 19
#define ACCEPT_HOVER 20
#define CANCEL 21
#define CANCEL_HOVER 22
#define SHUTDOWN 23
#define SHUTDOWN_HOVER 24
#define RESTART 25
#define RESTART_HOVER 26
#define RUN 27
#define RUN_HOVER 28
#define OPEN 29
#define OPEN_HOVER 30

struct Size
{
    int x;
    int y;
};

static const Size IMG_SIZE[] = {
    {0, 0},
    {15, 11},
    {15, 11},
    {46, 5},
    {46, 5},
    {9, 7},
    {9, 7},
    {7, 9},
    {7, 9},
    {13, 9},
    {13, 9},
    {7, 7},
    {7, 7},
    {7, 7},
    {7, 7},
    {9, 7},
    {9, 7},
    {9, 7},
    {15, 24},
    {15, 9},
    {15, 9},
    {15, 9},
    {15, 9},
    {15, 9},
    {15, 9},
    {15, 9},
    {15, 9},
    {15, 9},
    {15, 9},
    {15, 9},
    {15, 9},
};

static const unsigned char IMG[][46] = {
    // NO_IMAGE
    {},
    // ENTER
    {0xE0, 0x10, 0x10, 0x10, 0x10, 0x90, 0xCE, 0x81,
     0x81, 0x81, 0xE1, 0x01, 0x01, 0x01, 0xFE, 0x03,
     0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x04, 0x04,
     0x04, 0x04, 0x04, 0x04, 0x04, 0x03},
    // ENTER_HOVER
    {0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0x70, 0x3E, 0x7F,
     0x7F, 0x7F, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 0x03,
     0x07, 0x07, 0x07, 0x07, 0x07, 0x06, 0x07, 0x07,
     0x07, 0x07, 0x07, 0x07, 0x07, 0x03},
    // BACKSPACE
    {0x0E, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
     0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
     0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
     0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
     0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
     0x11, 0x11, 0x11, 0x11, 0x11, 0x0E},
    // BACKSPACE_HOVER
    {0x0E, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
     0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
     0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
     0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
     0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
     0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x0E},
    // DEL
    {0x3E, 0x41, 0x49, 0x5D, 0x49, 0x49, 0x49, 0x41,
     0x3E},
    // DEL_HOVER
    {0x3E, 0x7F, 0x77, 0x63, 0x77, 0x77, 0x77, 0x77,
     0x3E},
    // UPPER
    {0xFE, 0x01, 0x09, 0x7D, 0x09, 0x01, 0xFE, 0x00,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
    // UPPER_HOVER
    {0xFE, 0xFF, 0xF7, 0x83, 0xF7, 0xFF, 0xFE, 0x00,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
    // SYMBOL
    {0xFE, 0x01, 0x01, 0x7D, 0x01, 0x75, 0x5D, 0x01,
     0x55, 0x7D, 0x01, 0x01, 0xFE, 0x00, 0x01, 0x01,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
     0x01, 0x00},
    // SYMBOL_HOVER
    {0xFE, 0xFF, 0xFF, 0x83, 0xFF, 0x8B, 0xA3, 0xFF,
     0xAB, 0x83, 0xFF, 0xFF, 0xFE, 0x00, 0x01, 0x01,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
     0x01, 0x00},
    // EXIT
    {0x3E, 0x41, 0x55, 0x49, 0x55, 0x41, 0x3E},
    // EXIT_HOVER
    {0x3E, 0x7F, 0x6B, 0x77, 0x6B, 0x7F, 0x3E},
    // FOLDER
    {0x7E, 0x45, 0x45, 0x45, 0x46, 0x44, 0x7C},
    // FILE
    {0x00, 0x7F, 0x41, 0x41, 0x41, 0x43, 0x7E},
    // WIFI1
    {0x04, 0x02, 0x11, 0x09, 0x49, 0x09, 0x11, 0x02, 0x04},
    // WIFI2
    {0x00, 0x00, 0x10, 0x08, 0x48, 0x08, 0x10, 0x00, 0x00},
    // WIFI3
    {0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00},
    // CLOCK
    {0x00, 0x0E, 0xFE, 0x0A, 0x0A, 0x4A, 0x8A, 0x4A,
     0x8A, 0x4A, 0x0A, 0x0A, 0xFE, 0x0E, 0x00, 0x00,
     0x00, 0x81, 0xC3, 0x66, 0x3C, 0x18, 0x45, 0x18,
     0x3C, 0x66, 0xC3, 0x81, 0x00, 0x00, 0x00, 0x70,
     0x7F, 0x50, 0x58, 0x54, 0x5A, 0x55, 0x5A, 0x54,
     0x58, 0x50, 0x7F, 0x70, 0x00},
    // ACCEPT
    {0xFE, 0x01, 0x01, 0x01, 0x01, 0x11, 0x31, 0x61,
     0x39, 0x0D, 0x01, 0x01, 0x01, 0x01, 0xFE, 0x00,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
    // ACCEPT_HOVER
    {0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xCF, 0x9F,
     0xC7, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
    // CANCEL
    {0xFE, 0x01, 0x01, 0x01, 0x45, 0x6D, 0x39, 0x11,
     0x39, 0x6D, 0x45, 0x01, 0x01, 0x01, 0xFE, 0x00,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
    // CANCEL_HOVER
    {0xFE, 0xFF, 0xFF, 0xFF, 0xBB, 0x93, 0xC7, 0xEF,
     0xC7, 0x93, 0xBB, 0xFF, 0xFF, 0xFF, 0xFE, 0x00,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
    // SHUTDOWN
    {0xFE, 0x01, 0x01, 0x01, 0x31, 0x49, 0x41, 0x5D,
     0x41, 0x49, 0x31, 0x01, 0x01, 0x01, 0xFE, 0x00,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
    // SHUTDOWN_HOVER
    {0xFE, 0xFF, 0xFF, 0xFF, 0xCF, 0xB7, 0xBF, 0xA3,
     0xBF, 0xB7, 0xCF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
    // RESTART
    {0xFE, 0x01, 0x01, 0x01, 0x11, 0x39, 0x15, 0x45,
     0x45, 0x39, 0x01, 0x01, 0x01, 0x01, 0xFE, 0x00,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
    // RESTART_HOVER
    {0xFE, 0xFF, 0xFF, 0xFF, 0xEF, 0xC7, 0xEB, 0xBB,
     0xBB, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
    // RUN
    {0xFE, 0x01, 0x01, 0x01, 0x01, 0x7D, 0x45, 0x29,
     0x11, 0x01, 0x01, 0x01, 0x01, 0x01, 0xFE, 0x00,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
    // RUN_HOVER
    {0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x83, 0xBB, 0xD7,
     0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
    // OPEN
    {0xFE, 0x01, 0x01, 0x01, 0x01, 0x55, 0x55, 0x55,
     0x15, 0x15, 0x01, 0x01, 0x01, 0x01, 0xFE, 0x00,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x00},
    // OPEN_HOVER
    {0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xAB, 0xAB, 0xAB,
     0xEB, 0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
     0x01, 0x01, 0x01, 0x01, 0x01, 0x00}
};

#endif // DEFINE_H
